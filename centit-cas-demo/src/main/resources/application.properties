##
# CAS Server Context Configuration
# 
server.context-path=/cas
server.port=8080
#nacos.serviceName=CAS-SERVICE
#nacos.group=DEFAULT_GROUP

server.ssl.key-store=file:/D/Projects/RunData/ip_home/thekeystore
server.ssl.key-store-password=changeit
server.ssl.key-password=changeit
# server.ssl.ciphers=
# server.ssl.client-auth=
# server.ssl.enabled=
# server.ssl.key-alias=
# server.ssl.key-store-provider=
# server.ssl.key-store-type=
# server.ssl.protocol=
# server.ssl.trust-store=
# server.ssl.trust-store-password=
# server.ssl.trust-store-provider=
# server.ssl.trust-store-type=

server.max-http-header-size=2097152
server.use-forward-headers=true
server.connection-timeout=20000
server.error.include-stacktrace=ALWAYS

server.tomcat.max-http-post-size=2097152
server.tomcat.basedir=build/tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.max-threads=10
server.tomcat.port-header=X-Forwarded-Port
server.tomcat.protocol-header=X-Forwarded-Proto
server.tomcat.protocol-header-https-value=https
server.tomcat.remote-ip-header=X-FORWARDED-FOR
server.tomcat.uri-encoding=UTF-8

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false
# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

endpoints.enabled=false
endpoints.sensitive=true

endpoints.restart.enabled=false
endpoints.shutdown.enabled=false

management.security.enabled=true
management.security.roles=ACTUATOR,ADMIN
management.security.sessions=if_required
management.context-path=/status
management.add-application-context-header=false

security.basic.authorize-mode=role
security.basic.enabled=false
security.basic.path=/cas/status/**

##
# CAS Web Application Session Configuration
#
server.session.timeout=300
server.session.cookie.http-only=true
server.session.tracking-modes=COOKIE

##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML5
                    #HTML
##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
server.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

# \u4F7F\u7528http\u65B9\u5F0F \u53EF\u4EE5\u7528IP\u8BBF\u95EEcas\u670D\u52A1 zou_wy
cas.tgc.secure=false

# https://apereo.github.io/cas/5.2.x/installation/Configuration-Properties.html#service-registry
# \u5F00\u542F\u8BC6\u522Bjson\u6587\u4EF6\uFF0C\u9ED8\u8BA4false
cas.serviceRegistry.initFromJson=true
# \u9ED8\u8BA4json/yml\u8D44\u6E90\u52A0\u8F7D\u8DEF\u5F84\u4E3Aresources/services
# cas.serviceRegistry.config.location=classpath:/services
# \u81EA\u52A8\u626B\u63CF\u670D\u52A1\u914D\u7F6E\uFF0C\u9ED8\u8BA4\u5F00\u542F
# cas.serviceRegistry.watcherEnabled=true
# 120\u79D2\u626B\u63CF\u4E00\u904D
# cas.serviceRegistry.repeatInterval=120000
# \u5EF6\u8FDF15\u79D2\u5F00\u542F
# cas.serviceRegistry.startDelay=15000
# Auto-initialize the registry from default JSON service definitions

# ticket\u8FC7\u671F\u8BBE\u7F6E
cas.ticket.st.numberOfUses=1
cas.ticket.st.timeToKillInSeconds=600

#\u52A0\u5BC6\u7B56\u7565
#cas.authn.rest.passwordEncoder.type=DEFAULT
#cas.authn.rest.passwordEncoder.characterEncoding=UTF-8
#cas.authn.rest.passwordEncoder.encodingAlgorithm=MD5
#
#\u9A8C\u8BC1\u5931\u8D25\u51E0\u6B21\u540E\u8981\u6C42\u8F93\u5165 \u9A8C\u8BC1\u7801
complex.strategy.maxFailTimesBeforeValidateCode = 2
complex.strategy.defaultAuthType = ldap

complex.queryUser.sql=SELECT USER_PIN, LOGIN_NAME, USER_CODE, IS_VALID, USER_NAME, LOGIN_NAME, REG_EMAIL, REG_CELL_PHONE  FROM F_USERINFO WHERE LOGIN_NAME = ? or USER_CODE = ? or REG_EMAIL = ?
complex.queryUser.paramRepeatTimes = 3
complex.queryUser.pinField = USER_PIN
complex.queryUser.principalField = LOGIN_NAME
complex.queryUser.disabledField =
complex.queryUser.expiredField =

#complex.queryUser.datasource.connUrl=jdbc:mysql://192.168.132.86:3306/cz_workflow?useUnicode=true&characterEncoding=utf-8
complex.queryUser.datasource.connUrl=jdbc:mysql://192.168.134.6:3308/framework?useUnicode=true&characterEncoding=utf-8&useSSL=false
#complex.queryUser.datasource.username=root
#complex.queryUser.datasource.password=root
complex.queryUser.datasource.username=root
complex.queryUser.datasource.password=root

# insert into F_OPT_LOG(LOG_ID,LOG_LEVEL,USER_CODE,OPT_TIME,OPT_ID,OPT_TAG,OPT_METHOD,OPT_CONTENT,NEW_VALUE,OLD_VALUE) values
# success \u767B\u5F55\u6210\u529F
# \u63D0\u4F9B\u7684\u53C2\u6570\u6709
# \u901A\u7528\u53C2\u6570 \u767B\u5F55\u65F6\u95F4 loginTime \u65E5\u5FD7\u578B  username \u767B\u5F55\u540D loginIp \u767B\u5F55\u5730\u5740 authType \u8BA4\u8BC1\u7C7B\u578B credential \u8BA4\u8BC1\u8BE6\u7EC6\u4FE1\u606Fjson\u683C\u5F0F
# \u6210\u529F\u7279\u6709\u53C2\u6570 principle \u767B\u5F55\u540D\u53EF\u80FD\u548Cusername\u4E0D\u901A\uFF0C auth \u6210\u529F\u767B\u5F55\u7684\u6240\u6709\u4FE1\u606F json\u683C\u5F0F
# \u8BBE\u7F6E\u6B63\u786E\u7684 logId \u4E3Avarchar(22) oracle \u53EF\u4EE5\u7528 S_SYS_LOG.nextval MySql\u53EF\u4EE5\u7528\uFF1Asequence_nextval('S_SYS_LOG')
complex.jdbcLogger.successSql= insert into F_OPT_LOG(LOG_ID,LOG_LEVEL,USER_CODE,OPT_TIME,OPT_ID,OPT_TAG,OPT_METHOD,OPT_CONTENT,NEW_VALUE) \
  values (:logId,'0',:principle,:loginTime,'login',:loginIp,'login',:credential,:auth)
# error \u62A5\u9519
complex.jdbcLogger.errorSql= insert into F_OPT_LOG(LOG_ID,LOG_LEVEL,USER_CODE,OPT_TIME,OPT_ID,OPT_TAG,OPT_METHOD,OPT_CONTENT) \
  values (:logId,'1',:username,:loginTime,'login',:loginIp,'login',:credential)
# warn \u8B66\u544A
complex.jdbcLogger.warnSql= insert into F_OPT_LOG(LOG_ID,LOG_LEVEL,USER_CODE,OPT_TIME,OPT_ID,OPT_TAG,OPT_METHOD,OPT_CONTENT) \
  values (:logId,'2',:username,:loginTime,'login',:loginIp,'login',:credential)
# failedLogin \u5931\u8D25
complex.jdbcLogger.failedLoginSql =

#complex.jdbcLogger.datasource.connUrl=jdbc:mysql://192.168.128.32:3306/frameworkdb?useUnicode=true&characterEncoding=utf-8
# complex.jdbcLogger.datasource.connUrl=jdbc:oracle:thin:@172.17.0.2:1521:xe
complex.jdbcLogger.datasource.connUrl=jdbc:mysql://192.168.134.6:3308/framework?useUnicode=true&characterEncoding=utf-8&useSSL=false
complex.jdbcLogger.datasource.username=root
complex.jdbcLogger.datasource.password=root

complex.syncUser.enable = true
complex.syncUser.datasource.connUrl=jdbc:mysql://192.168.134.6:3308/framework?useUnicode=true&characterEncoding=utf-8&useSSL=false
complex.syncUser.datasource.username=root
complex.syncUser.datasource.password=root

complex.syncUser.queryUserSql =SELECT USER_CODE FROM F_USERINFO WHERE LOGIN_NAME = ?
complex.syncUser.insertUserSql =insert into F_USERINFO(USER_CODE,USER_PIN,USER_TYPE,IS_VALID,LOGIN_NAME,USER_NAME,USER_TAG,REG_EMAIL,PRIMARY_UNIT,\
 USER_WORD,USER_ORDER,UPDATE_DATE,CREATE_DATE) values (:usercode,:userpin,:usertype,:isvalid,:loginname,:username,:usertag,:regemail,:primaryunit,\
 :userword,1000,:updatedate,:createdate)
complex.syncUser.queryUnitSql =SELECT UNIT_CODE FROM F_UNITINFO WHERE UNIT_TAG = ? 
complex.syncUser.insertUnitSql =insert into F_UNITINFO(UNIT_CODE,UNIT_TYPE,IS_VALID,UNIT_TAG,UNIT_NAME,UNIT_PATH,\
 UNIT_DESC,UPDATE_DATE,CREATE_DATE) values (:unitcode,:unittype,:isvalid,:unittag,:unitname,:unitpath,:unitdesc,\
 :updatedate,:createdate)
complex.syncUser.queryUserUnitSql =SELECT USER_UNIT_ID FROM F_USERUNIT WHERE USER_CODE = ? and UNIT_CODE = ?
complex.syncUser.insertUserUnitSql =insert into F_USERUNIT(USER_UNIT_ID,UNIT_CODE,USER_CODE,IS_PRIMARY,USER_STATION,USER_RANK,\
 USER_ORDER,UPDATE_DATE,CREATE_DATE) values (:userunitid,:unitcode,:usercode,:isprimary,:userstation,:userrank,:userorder,\
 :updatedate,:createdate)

complex.ldap.url=LDAP://192.168.128.5:389
complex.ldap.username=accounts@centit.com
complex.ldap.password=centit.131511.cn
complex.ldap.searchBase=CN=Users,DC=centit,DC=com

complex.ldap.searchFilter[0]=(&(objectCategory=person)(objectClass=user)(sAMAccountName={0}))
complex.ldap.searchFilter[1]=(distinguishedName=CN={0},CN=Users,DC=centit,DC=com)
# complex.ldap.searchFilter[2]=(&(objectCategory=person)(objectClass=user)(name={0}))
# complex.ldap.searchFilter[3]=(&(objectCategory=person)(objectClass=user)(mail={0}))
complex.ldap.principalIdField=sAMAccountName
complex.ldap.principalAttributes=displayName,name,sAMAccountName,mail,distinguishedName,jobNo,idCard,mobilePhone,description,memberOf
complex.ldap.dnFormat=CN={name},CN=Users,DC=centit,DC=com
# complex.ldap.dnFormat={sAMAccountName}@centit.com

